/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VestaDexTrader,
  VestaDexTraderInterface,
} from "../../../contracts/DexTrader/VestaDexTrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BadReturnValueFromERC20OnTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBeNativeChainToken",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ErrorTransferETH",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minimumAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "FailedToReceiveExactAmountOut",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermission",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTraderSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "NoContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NonReentrancy",
    type: "error",
  },
  {
    inputs: [],
    name: "NumberIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutingNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_paramValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_msgValue",
        type: "uint256",
      },
    ],
    name: "SanitizeMsgValueFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferGenericFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "returnedCallData",
        type: "bytes",
      },
    ],
    name: "TraderFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maximumAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestedAmountIn",
        type: "uint256",
      },
    ],
    name: "TraderFailedMaxAmountInExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes1",
        name: "newPermission",
        type: "bytes1",
      },
    ],
    name: "PermissionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "RouteUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[2]",
        name: "tokenInOut",
        type: "address[2]",
      },
      {
        indexed: false,
        internalType: "uint256[2]",
        name: "amountInOut",
        type: "uint256[2]",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes16",
        name: "selector",
        type: "bytes16",
      },
    ],
    name: "TraderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "TraderRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_firstTokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_firstAmountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes16",
            name: "traderSelector",
            type: "bytes16",
          },
          {
            internalType: "address[2]",
            name: "tokenInOut",
            type: "address[2]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ManualExchange[]",
        name: "_requests",
        type: "tuple[]",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256[]",
        name: "swapDatas_",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes16",
            name: "traderSelector",
            type: "bytes16",
          },
          {
            internalType: "address[2]",
            name: "tokenInOut",
            type: "address[2]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ManualExchange[]",
        name: "_requests",
        type: "tuple[]",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes16",
            name: "traderSelector",
            type: "bytes16",
          },
          {
            internalType: "address[2]",
            name: "tokenInOut",
            type: "address[2]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ManualExchange[]",
        name: "_requests",
        type: "tuple[]",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getPermissionLevel",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_selector",
        type: "bytes16",
      },
    ],
    name: "getTraderAddressWithSelector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bytes1",
        name: "accessLevel",
        type: "bytes1",
      },
    ],
    name: "hasPermissionLevel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "isRegisteredTrader",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_selector",
        type: "bytes16",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "registerTrader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "_selector",
        type: "bytes16",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "removeTrader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bytes1",
        name: "_permission",
        type: "bytes1",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a8b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638ce373641161007c5780638ce37364146101bc5780638da5cb5b146101cf5780639976ed81146101e0578063c248c3de1461021c578063d571d1511461022f578063f2fde38b14610242578063f54e9e451461025557600080fd5b8062985337146100ce5780630a9254e4146100e357806316cfa3e8146100eb5780631a80d0d714610111578063715018a61461012457806371a1e2b81461012c5780637707153514610171575b600080fd5b6100e16100dc3660046110a4565b610275565b005b6100e16102ec565b6100fe6100f9366004611126565b610402565b6040519081526020015b60405180910390f35b6100e161011f366004611171565b610505565b6100e161051b565b61015861013a3660046111ac565b6001600160a01b031660009081526066602052604090205460f81b90565b6040516001600160f81b03199091168152602001610108565b6101a461017f3660046111c9565b6001600160801b0319166000908152609960205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610108565b6100e16101ca3660046110a4565b61052f565b6033546001600160a01b03166101a4565b61020c6101ee3660046111ac565b6001600160a01b031660009081526098602052604090205460ff1690565b6040519015158152602001610108565b61020c61022a366004611171565b6105b7565b6100fe61023d366004611126565b6105e8565b6100e16102503660046111ac565b6106eb565b6102686102633660046111e4565b610761565b6040516101089190611256565b61027d610a64565b6001600160a01b0381166000818152609860209081526040808320805460ff191690556001600160801b031986168352609990915280822080546001600160a01b0319169055517f75db1c3d0ec52718796b33ea74926fde51d3cb248fea0e85e0230cdc2a0b90479190a25050565b600054610100900460ff161580801561030c5750600054600160ff909116105b806103265750303b158015610326575060005460ff166001145b61038e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103b1576000805461ff0019166101001790555b6103b9610abe565b80156103ff576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60008161040d61102c565b6000865b83156104f85783610421816112b0565b945050868685818110610436576104366112c7565b905060200281019061044891906112dd565b6104519061144e565b80516001600160801b03191660009081526099602052604090819020548251918301519295506001600160a01b03169350839163499a3c50916104949185610aff565b6040518263ffffffff1660e01b81526004016104b09190611545565b602060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190611558565b9050610411565b93505050505b9392505050565b61050d610a64565b6105178282610c63565b5050565b610523610a64565b61052d6000610cc4565b565b610537610a64565b6001600160a01b0381166000818152609860209081526040808320805460ff191660011790556001600160801b03198616808452609983529281902080546001600160a01b03191685179055519182527f0c8573547063d95daefdd25696f633910f9178a9373e176ab046ce6697ef283891015b60405180910390a25050565b6001600160a01b03821660009081526066602052604090205460f81b81166001600160f81b03191615155b92915050565b6000816105f361102c565b600086815b848110156106df57878782818110610612576106126112c7565b905060200281019061062491906112dd565b61062d9061144e565b80516001600160801b03191660009081526099602052604090819020548251918301519296506001600160a01b03169450849163a8f1f52e916106709186610aff565b6040518263ffffffff1660e01b815260040161068c9190611545565b602060405180830381865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611558565b91506106d881611571565b90506105f8565b50979650505050505050565b6106f3610a64565b6001600160a01b0381166107585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610385565b6103ff81610cc4565b6060856001600160a01b03811661078b5760405163e6c4247b60e01b815260040160405180910390fd5b8260008190036107ae57604051632e11048160e11b815260040160405180910390fd5b806001600160401b038111156107c6576107c66112fd565b6040519080825280602002602001820160405280156107ef578160200160208202803683370190505b5060655490935061080d90889033906001600160a01b031689610d16565b61081561102c565b866000805b8481101561097c57888882818110610834576108346112c7565b905060200281019061084691906112dd565b61084f9061144e565b80516001600160801b0319166000908152609960205260409020549094506001600160a01b0316915081610896576040516309e5b06760e01b815260040160405180910390fd5b6020840151516108a69083610e2f565b6001600160a01b03821663881e142e6108c060018861158a565b83146108d7576065546001600160a01b03166108d9565b8d5b6108ec8760000151886040015188610f5e565b6040518363ffffffff1660e01b815260040161090992919061159d565b6020604051808303816000875af1158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190611558565b925082878281518110610961576109616112c7565b602090810291909101015261097581611571565b905061081a565b50604080518082019091526001600160a01b038b811682528c169033907ec78b0fa56846928d121987992dda58424279f1dd10b63d1122270d9a26450890602081018c8c6109cb60018c61158a565b8181106109da576109da6112c7565b90506020028101906109ec91906112dd565b6109fd9060608101906040016111ac565b6001600160a01b03169052604080518082019091528d8152602081018b610a2560018c61158a565b81518110610a3557610a356112c7565b6020026020010151815250604051610a4e9291906115c9565b60405180910390a3505050505095945050505050565b6033546001600160a01b0316331461052d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610385565b600054610100900460ff16610ae55760405162461bcd60e51b81526004016103859061162e565b606580546001600160a01b0319163017905561052d610fd2565b60606001600160801b031984166f03e9d2ceb7841b35a299b03bdb7f885560821b03610b9c57600083806020019051810190610b3b9190611694565b905060405180608001604052808260000151815260200182602001516001600160a01b031681526020018481526020018260a001511515815250604051602001610b859190611778565b6040516020818303038152906040529150506104fe565b6001600160801b031984166f79402703bca5d67f15c4e7e9841e723160801b03610c2257600083806020019051810190610bd691906117da565b9050604051806080016040528082600001516001600160a01b0316815260200182602001518152602001848152602001826080015161ffff16815250604051602001610b859190611885565b600083806020019051810190610c3891906118e6565b905060405180604001604052808260000151815260200184815250604051602001610b8591906119d5565b6001600160a01b038216600081815260666020908152604091829020805460ff191660f886901c17905590516001600160f81b0319841681527f875cc7db9aab147d67906d9905e17f3ace84574847d15e4262794dfddb0daaa491016105ab565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841615610e29576040516323b872dd60e01b600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d15158116610e1e5780873b151516610e1e5780610e095781610de8573d15610dc2576020601f3d0104602084048160030281831115610da957818303600302610200838002858002030401015b5a602082011015610dbe573d6000803e3d6000fd5b5050505b63f486bc8760e01b60005286600452856024528460445260006064528360845260a46000fd5b639889192360e01b6000528660045285602452846044528360645260846000fd5b632f8aeb3960e11b6000528660045260246000fd5b505060405260006060525b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038281166024830152600019919084169063dd62ed3e90604401602060405180830381865afa158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea49190611558565b03610ead575050565b60405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f219190611a3a565b6105175760405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994811985a5b195960921b6044820152606401610385565b60606001600160801b031984166f03e9d2ceb7841b35a299b03bdb7f885560821b03610f92578160808401528290506104fe565b6001600160801b031984166f79402703bca5d67f15c4e7e9841e723160801b03610fc4578160808401528290506104fe565b8160608401528290506104fe565b600054610100900460ff16610ff95760405162461bcd60e51b81526004016103859061162e565b61052d600054610100900460ff166110235760405162461bcd60e51b81526004016103859061162e565b61052d33610cc4565b60408051606081019091526000815260208101611047611054565b8152602001606081525090565b60405180604001604052806002906020820280368337509192915050565b80356001600160801b03198116811461108a57600080fd5b919050565b6001600160a01b03811681146103ff57600080fd5b600080604083850312156110b757600080fd5b6110c083611072565b915060208301356110d08161108f565b809150509250929050565b60008083601f8401126110ed57600080fd5b5081356001600160401b0381111561110457600080fd5b6020830191508360208260051b850101111561111f57600080fd5b9250929050565b60008060006040848603121561113b57600080fd5b8335925060208401356001600160401b0381111561115857600080fd5b611164868287016110db565b9497909650939450505050565b6000806040838503121561118457600080fd5b823561118f8161108f565b915060208301356001600160f81b0319811681146110d057600080fd5b6000602082840312156111be57600080fd5b81356104fe8161108f565b6000602082840312156111db57600080fd5b6104fe82611072565b6000806000806000608086880312156111fc57600080fd5b85356112078161108f565b945060208601356112178161108f565b93506040860135925060608601356001600160401b0381111561123957600080fd5b611245888289016110db565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b8181101561128e57835183529284019291840191600101611272565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816112bf576112bf61129a565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60008235607e198336030181126112f357600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715611335576113356112fd565b60405290565b60405160c081016001600160401b0381118282101715611335576113356112fd565b60405160a081016001600160401b0381118282101715611335576113356112fd565b604080519081016001600160401b0381118282101715611335576113356112fd565b604051601f8201601f191681016001600160401b03811182821017156113c9576113c96112fd565b604052919050565b60006001600160401b038211156113ea576113ea6112fd565b50601f01601f191660200190565b600082601f83011261140957600080fd5b813561141c611417826113d1565b6113a1565b81815284602083860101111561143157600080fd5b816020850160208301376000918101602001919091529392505050565b60006080823603121561146057600080fd5b611468611313565b61147183611072565b8152602036603f85011261148457600080fd5b61148c61137f565b80606086013681111561149e57600080fd5b8387015b818110156114c25780356114b58161108f565b84529284019284016114a2565b509284015250356001600160401b038111156114dd57600080fd5b6114e9368286016113f8565b60408301525092915050565b60005b838110156115105781810151838201526020016114f8565b50506000910152565b600081518084526115318160208601602086016114f5565b601f01601f19169290920160200192915050565b6020815260006104fe6020830184611519565b60006020828403121561156a57600080fd5b5051919050565b6000600182016115835761158361129a565b5060010190565b818103818111156105e2576105e261129a565b6001600160a01b03831681526040602082018190526000906115c190830184611519565b949350505050565b60808101818460005b60028110156115fa5781516001600160a01b03168352602092830192909101906001016115d2565b505050604082018360005b6002811015611624578151835260209283019290910190600101611605565b5050509392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805161108a8161108f565b8051801515811461108a57600080fd5b600060208083850312156116a757600080fd5b82516001600160401b03808211156116be57600080fd5b9084019060c082870312156116d257600080fd5b6116da61133b565b8251828111156116e957600080fd5b83019150601f820187136116fc57600080fd5b815161170a611417826113d1565b818152888683860101111561171e57600080fd5b61172d828783018887016114f5565b82525061173b838501611679565b8482015260408301516040820152606083015160608201526080830151608082015261176960a08401611684565b60a08201529695505050505050565b60208152600082516080602084015261179460a0840182611519565b905060018060a01b036020850151166040840152604084015160608401526060840151151560808401528091505092915050565b805161ffff8116811461108a57600080fd5b600060c082840312156117ec57600080fd5b6117f461135d565b82516117ff8161108f565b81526020603f8401851361181257600080fd5b61181a61137f565b80606086018781111561182c57600080fd5b8387015b8181101561185757805160ff8116811461184a5760008081fd5b8452928401928401611830565b5092840152505160408201526080830151606082015261187960a084016117c8565b60808201529392505050565b81516001600160a01b0316815260208083015160a08301919081840160005b60028110156118c457825160ff16825291830191908301906001016118a4565b505050506040830151606083015261ffff606084015116608083015292915050565b600060208083850312156118f957600080fd5b82516001600160401b038082111561191057600080fd5b908401906060828703121561192457600080fd5b61192c611313565b82518281111561193b57600080fd5b8301601f8101881361194c57600080fd5b80518381111561195e5761195e6112fd565b8060051b935061196f8685016113a1565b818152938201860193868101908a86111561198957600080fd5b928701925b858410156119b357835192506119a38361108f565b828252928701929087019061198e565b8452505050828401519381019390935250604090810151908201529392505050565b6020808252825160408383015280516060840181905260009291820190839060808601905b80831015611a235783516001600160a01b031682529284019260019290920191908401906119fa565b508387015160408701528094505050505092915050565b600060208284031215611a4c57600080fd5b6104fe8261168456fea2646970667358221220b4986214f7dec6405896c31f760a406dd1118caca3e62a28cc271f30429c5e2f64736f6c63430008130033";

type VestaDexTraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestaDexTraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestaDexTrader__factory extends ContractFactory {
  constructor(...args: VestaDexTraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VestaDexTrader> {
    return super.deploy(overrides || {}) as Promise<VestaDexTrader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VestaDexTrader {
    return super.attach(address) as VestaDexTrader;
  }
  override connect(signer: Signer): VestaDexTrader__factory {
    return super.connect(signer) as VestaDexTrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestaDexTraderInterface {
    return new utils.Interface(_abi) as VestaDexTraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestaDexTrader {
    return new Contract(address, _abi, signerOrProvider) as VestaDexTrader;
  }
}
