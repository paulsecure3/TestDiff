/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniswapV2Trader,
  UniswapV2TraderInterface,
} from "../../../../contracts/DexTrader/trader/UniswapV2Trader";

const _abi = [
  {
    inputs: [],
    name: "AmountInAndOutAreZeroOrSameValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BadReturnValueFromERC20OnTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBeNativeChainToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ErrorTransferETH",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermission",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRequestEncoding",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "NoContract",
    type: "error",
  },
  {
    inputs: [],
    name: "NonReentrancy",
    type: "error",
  },
  {
    inputs: [],
    name: "NumberIsZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_paramValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_msgValue",
        type: "uint256",
      },
    ],
    name: "SanitizeMsgValueFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "identifier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferGenericFailure",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes1",
        name: "newPermission",
        type: "bytes1",
      },
    ],
    name: "PermissionChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "CORRECTION_DENOMINATOR",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXACT_AMOUNT_IN_CORRECTION",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
    ],
    name: "decodeRequestExactInOutParams",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct GenericRequestExactInOutParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
    ],
    name: "decodeSwapRequest",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "expectedAmountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedAmountOut",
            type: "uint256",
          },
        ],
        internalType: "struct GenericSwapRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
    ],
    name: "exchange",
    outputs: [
      {
        internalType: "uint256",
        name: "swapResponse_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "generateExpectInOutRequest",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_expectedAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedAmountOut",
        type: "uint256",
      },
    ],
    name: "generateSwapRequest",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getPermissionLevel",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bytes1",
        name: "accessLevel",
        type: "bytes1",
      },
    ],
    name: "hasPermissionLevel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bytes1",
        name: "_permission",
        type: "bytes1",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611901806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806371a1e2b8116100a2578063b03658ea11610071578063b03658ea14610280578063c248c3de14610293578063d396f581146102df578063f2fde38b146102ff578063f887ea401461031257600080fd5b806371a1e2b8146101f0578063881e142e146102355780638da5cb5b14610248578063a8f1f52e1461026d57600080fd5b80633f2601ef116100de5780633f2601ef14610199578063499a3c50146101ac5780635ceecb71146101cd578063715018a6146101e857600080fd5b80630a30025b146101105780631a80d0d714610139578063271b87db1461014e5780632e8479fa1461016e575b600080fd5b61012361011e36600461125d565b610325565b60405161013091906112d5565b60405180910390f35b61014c61014736600461131c565b610354565b005b61016161015c3660046113ad565b61036a565b6040516101309190611421565b610178620186a081565b6040516fffffffffffffffffffffffffffffffff9091168152602001610130565b61014c6101a7366004611454565b6103e3565b6101bf6101ba36600461125d565b610542565b604051908152602001610130565b6101d5600381565b60405161ffff9091168152602001610130565b61014c6105ee565b61021c6101fe366004611454565b6001600160a01b031660009081526066602052604090205460f81b90565b6040516001600160f81b03199091168152602001610130565b6101bf610243366004611478565b610602565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6101bf61027b36600461125d565b610661565b61016161028e3660046114c7565b610721565b6102cf6102a136600461131c565b6001600160a01b039190911660009081526066602052604090205460f81b166001600160f81b031916151590565b6040519015158152602001610130565b6102f26102ed36600461125d565b610788565b6040516101309190611512565b61014c61030d366004611454565b6107c0565b609854610255906001600160a01b031681565b6040805180820190915260608152600060208201528180602001905181019061034e91906115e5565b92915050565b61035c610839565b6103668282610893565b5050565b606060405180606001604052808686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506020808201869052604091820185905290516103ca929101611512565b6040516020818303038152906040529050949350505050565b80806001600160a01b03163b60000361040f576040516303777f6960e51b815260040160405180910390fd5b600054610100900460ff161580801561042f5750600054600160ff909116105b806104495750303b158015610449575060005460ff166001145b6104b15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104d4576000805461ff0019166101001790555b6104dc6108fb565b609880546001600160a01b0319166001600160a01b038516179055801561053d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60008061054e8361093c565b609854602082015182516040516307c0329d60e21b81529394506001600160a01b0390921692631f00ca74926105879291600401611674565b600060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cc919081019061168d565b6000815181106105de576105de61171d565b6020026020010151915050919050565b6105f6610839565b61060060006109cd565b565b60008061060e83610a1f565b905061062281602001518260400151610aa1565b8060200151600003610646576106418482600001518360400151610ad4565b610659565b6106598482600001518360200151610c71565b949350505050565b60008061066d8361093c565b6098546020820151825160405163d06ca61f60e01b81529394506000936001600160a01b039093169263d06ca61f926106aa929091600401611674565b600060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ef919081019061168d565b905080600182516107009190611733565b815181106107105761071061171d565b602002602001015192505050919050565b60408051602084028082016060908101845292820185815282918790879081908588019084908082843760009201919091525050509082525060209081018490526040516107709291016112d5565b60405160208183030381529060405290509392505050565b6107ac60405180606001604052806060815260200160008152602001600081525090565b8180602001905181019061034e9190611754565b6107c8610839565b6001600160a01b03811661082d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a8565b610836816109cd565b50565b6033546001600160a01b031633146106005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a8565b6001600160a01b038216600081815260666020908152604091829020805460ff191660f886901c17905590516001600160f81b0319841681527f875cc7db9aab147d67906d9905e17f3ace84574847d15e4262794dfddb0daaa4910160405180910390a25050565b600054610100900460ff166109225760405162461bcd60e51b81526004016104a8906117ed565b606580546001600160a01b03191630179055610600610d68565b60408051808201825260608152600060208201529051630a30025b60e01b81523090630a30025b90610972908590600401611421565b600060405180830381865afa9250505080156109b057506040513d6000823e601f3d908101601f191682016040526109ad91908101906115e5565b60015b61034e57604051638e8629e960e01b815260040160405180910390fd5b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a4360405180606001604052806060815260200160008152602001600081525090565b60405163d396f58160e01b8152309063d396f58190610a66908590600401611421565b600060405180830381865afa9250505080156109b057506040513d6000823e601f3d908101601f191682016040526109ad9190810190611754565b80821480610ab6575081158015610ab6575080155b15610366576040516398779ec360e01b815260040160405180910390fd5b60008083600081518110610aea57610aea61171d565b60209081029190910101516098546040516307c0329d60e21b81529192506000916001600160a01b0390911690631f00ca7490610b2d9087908990600401611674565b600060405180830381865afa158015610b4a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b72919081019061168d565b600081518110610b8457610b8461171d565b60200260200101519050610b9a82333084610d97565b609854610bb19083906001600160a01b0316610eb0565b609854604051634401edf760e11b81526001600160a01b0390911690638803dbee90610be990879085908a908c904290600401611838565b6000604051808303816000875af1158015610c08573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c30919081019061168d565b600081518110610c4257610c4261171d565b6020026020010151925080831015610c6857610c688233610c638685611733565b610fdf565b50509392505050565b60008083600081518110610c8757610c8761171d565b60200260200101519050610c9d81333086610d97565b609854610cb49082906001600160a01b0316610eb0565b6098546040516338ed173960e01b81526000916001600160a01b0316906338ed173990610ced90879085908a908c904290600401611838565b6000604051808303816000875af1158015610d0c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d34919081019061168d565b90508060018251610d459190611733565b81518110610d5557610d5561171d565b6020026020010151925050509392505050565b600054610100900460ff16610d8f5760405162461bcd60e51b81526004016104a8906117ed565b610600611178565b6001600160a01b03841615610eaa576040516323b872dd60e01b600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d15158116610e9f5780873b151516610e9f5780610e8a5781610e69573d15610e43576020601f3d0104602084048160030281831115610e2a57818303600302610200838002858002030401015b5a602082011015610e3f573d6000803e3d6000fd5b5050505b63f486bc8760e01b60005286600452856024528460445260006064528360845260a46000fd5b639889192360e01b6000528660045285602452846044528360645260846000fd5b632f8aeb3960e11b6000528660045260246000fd5b505060405260006060525b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038281166024830152600019919084169063dd62ed3e90604401602060405180830381865afa158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190611874565b03610f2e575050565b60405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa2919061188d565b6103665760405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994811985a5b195960921b60448201526064016104a8565b6001600160a01b03831661109357604080516000808252602082019092526001600160a01b03841690839060405161101791906118af565b60006040518083038185875af1925050503d8060008114611054576040519150601f19603f3d011682016040523d82523d6000602084013e611059565b606091505b5050905080610eaa576040516354e0012d60e01b81523060048201526001600160a01b0385166024820152604481018390526064016104a8565b600030905060405163a9059cbb60e01b6000528360045282602452602060006044600080895af1803d15601f3d116001600051141617163d15158116610e9f5780873b151516610e9f5780610e8a5781611157573d15611131576020601f3d010460208404816003028183111561111857818303600302610200838002858002030401015b5a60208201101561112d573d6000803e3d6000fd5b5050505b63f486bc8760e01b60005286600452836024528560445260006064528460845260a46000fd5b639889192360e01b6000528660045283602452856044528460645260846000fd5b600054610100900460ff1661119f5760405162461bcd60e51b81526004016104a8906117ed565b610600336109cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156111e6576111e66111a8565b604052919050565b600082601f8301126111ff57600080fd5b81356001600160401b03811115611218576112186111a8565b61122b601f8201601f19166020016111be565b81815284602083860101111561124057600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561126f57600080fd5b81356001600160401b0381111561128557600080fd5b610659848285016111ee565b600081518084526020808501945080840160005b838110156112ca5781516001600160a01b0316875295820195908201906001016112a5565b509495945050505050565b6020815260008251604060208401526112f16060840182611291565b9050602084015160408401528091505092915050565b6001600160a01b038116811461083657600080fd5b6000806040838503121561132f57600080fd5b823561133a81611307565b915060208301356001600160f81b03198116811461135757600080fd5b809150509250929050565b60008083601f84011261137457600080fd5b5081356001600160401b0381111561138b57600080fd5b6020830191508360208260051b85010111156113a657600080fd5b9250929050565b600080600080606085870312156113c357600080fd5b84356001600160401b038111156113d957600080fd5b6113e587828801611362565b90989097506020870135966040013595509350505050565b60005b83811015611418578181015183820152602001611400565b50506000910152565b60208152600082518060208401526114408160408501602087016113fd565b601f01601f19169190910160400192915050565b60006020828403121561146657600080fd5b813561147181611307565b9392505050565b6000806040838503121561148b57600080fd5b823561149681611307565b915060208301356001600160401b038111156114b157600080fd5b6114bd858286016111ee565b9150509250929050565b6000806000604084860312156114dc57600080fd5b83356001600160401b038111156114f257600080fd5b6114fe86828701611362565b909790965060209590950135949350505050565b60208152600082516060602084015261152e6080840182611291565b905060208401516040840152604084015160608401528091505092915050565b60006001600160401b03821115611567576115676111a8565b5060051b60200190565b600082601f83011261158257600080fd5b815160206115976115928361154e565b6111be565b82815260059290921b840181019181810190868411156115b657600080fd5b8286015b848110156115da5780516115cd81611307565b83529183019183016115ba565b509695505050505050565b6000602082840312156115f757600080fd5b81516001600160401b038082111561160e57600080fd5b908301906040828603121561162257600080fd5b60405160408101818110838211171561163d5761163d6111a8565b60405282518281111561164f57600080fd5b61165b87828601611571565b8252506020830151602082015280935050505092915050565b8281526040602082015260006106596040830184611291565b600060208083850312156116a057600080fd5b82516001600160401b038111156116b657600080fd5b8301601f810185136116c757600080fd5b80516116d56115928261154e565b81815260059190911b820183019083810190878311156116f457600080fd5b928401925b82841015611712578351825292840192908401906116f9565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561034e57634e487b7160e01b600052601160045260246000fd5b60006020828403121561176657600080fd5b81516001600160401b038082111561177d57600080fd5b908301906060828603121561179157600080fd5b6040516060810181811083821117156117ac576117ac6111a8565b6040528251828111156117be57600080fd5b6117ca87828601611571565b825250602083015160208201526040830151604082015280935050505092915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b85815284602082015260a06040820152600061185760a0830186611291565b6001600160a01b0394909416606083015250608001529392505050565b60006020828403121561188657600080fd5b5051919050565b60006020828403121561189f57600080fd5b8151801515811461147157600080fd5b600082516118c18184602087016113fd565b919091019291505056fea2646970667358221220f429b51920a2f003fea63e09573d37776334342fdc14a9f8147fb146fce5892164736f6c63430008130033";

type UniswapV2TraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2TraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Trader__factory extends ContractFactory {
  constructor(...args: UniswapV2TraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Trader> {
    return super.deploy(overrides || {}) as Promise<UniswapV2Trader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV2Trader {
    return super.attach(address) as UniswapV2Trader;
  }
  override connect(signer: Signer): UniswapV2Trader__factory {
    return super.connect(signer) as UniswapV2Trader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2TraderInterface {
    return new utils.Interface(_abi) as UniswapV2TraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Trader {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Trader;
  }
}
