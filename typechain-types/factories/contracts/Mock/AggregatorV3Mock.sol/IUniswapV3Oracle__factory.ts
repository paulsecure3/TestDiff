/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUniswapV3Oracle,
  IUniswapV3OracleInterface,
} from "../../../../contracts/Mock/AggregatorV3Mock.sol/IUniswapV3Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IUniswapV3Oracle__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV3OracleInterface {
    return new utils.Interface(_abi) as IUniswapV3OracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUniswapV3Oracle {
    return new Contract(address, _abi, signerOrProvider) as IUniswapV3Oracle;
  }
}
