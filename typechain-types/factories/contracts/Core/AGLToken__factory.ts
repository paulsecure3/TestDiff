/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AGLToken,
  AGLTokenInterface,
} from "../../../contracts/Core/AGLToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasurySig",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405269d3c21bcecceda10000006007553480156200001f57600080fd5b506040516200116a3803806200116a83398101604081905262000042916200036c565b604051806040016040528060078152602001664167696c656c7960c81b815250604051806040016040528060038152602001621051d360ea1b81525081600390816200008f919062000442565b5060046200009e828262000442565b504691507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9050620000cf620001f3565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f198184030181529190528051602090910120600655506001600160a01b038116620001ab5760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642054726561737572792053696700000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038116608052600754620001d5903390620001cf9060326200028d565b620002a4565b600754620001ec908290620001cf9060326200028d565b5062000554565b6060600380546200020490620003b4565b80601f01602080910402602001604051908101604052809291908181526020018280546200023290620003b4565b8015620002835780601f10620002575761010080835404028352916020019162000283565b820191906000526020600020905b8154815290600101906020018083116200026557829003601f168201915b5050505050905090565b60006200029b828462000524565b90505b92915050565b6001600160a01b038216620002fc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620001a2565b80600260008282546200031091906200053e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6000602082840312156200037f57600080fd5b81516001600160a01b03811681146200039757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003c957607f821691505b602082108103620003ea57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036757600081815260208120601f850160051c81016020861015620004195750805b601f850160051c820191505b818110156200043a5782815560010162000425565b505050505050565b81516001600160401b038111156200045e576200045e6200039e565b62000476816200046f8454620003b4565b84620003f0565b602080601f831160018114620004ae5760008415620004955750858301515b600019600386901b1c1916600185901b1785556200043a565b600085815260208120601f198616915b82811015620004df57888601518255948401946001909101908401620004be565b5085821015620004fe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200029e576200029e6200050e565b808201808211156200029e576200029e6200050e565b608051610bfa6200057060003960006101cd0152610bfa6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806361d027b3116100a25780639a8a0592116100715780639a8a05921461024b578063a457c2d714610251578063a9059cbb14610264578063d505accf14610277578063dd62ed3e1461028c57600080fd5b806361d027b3146101c857806370a08231146102075780637ecebe001461023057806395d89b411461024357600080fd5b806330adf81f116100de57806330adf81f14610176578063313ce5671461019d5780633644e515146101ac57806339509351146101b557600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861029f565b60405161012591906109d1565b60405180910390f35b61014161013c366004610a3b565b610331565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610a65565b61034b565b6101557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60405160128152602001610125565b61015560065481565b6101416101c3366004610a3b565b61036f565b6101ef7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b610155610215366004610aa1565b6001600160a01b031660009081526020819052604090205490565b61015561023e366004610aa1565b610391565b6101186103af565b46610155565b61014161025f366004610a3b565b6103be565b610141610272366004610a3b565b61043e565b61028a610285366004610ac3565b61044c565b005b61015561029a366004610b36565b610664565b6060600380546102ae90610b69565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610b69565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60003361033f81858561068f565b60019150505b92915050565b6000336103598582856107b3565b61036485858561082d565b506001949350505050565b60003361033f8185856103828383610664565b61038c9190610ba3565b61068f565b6001600160a01b038116600090815260056020526040812054610345565b6060600480546102ae90610b69565b600033816103cc8286610664565b9050838110156104315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610364828686840361068f565b60003361033f81858561082d565b834211156104975760405162461bcd60e51b81526020600482015260186024820152775065726d69743a206578706972656420646561646c696e6560401b6044820152606401610428565b6001600160a01b0387811660008181526005602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a084019490945260c08084018990528451808503909101815260e08401855280519082012060065461190160f01b61010086015261010285015261012280850182905285518086039091018152610142850180875281519184019190912090849052610162850180875281905260ff89166101828601526101a285018890526101c2850187905294519094936001926101e2808301939192601f198301929081900390910190855afa1580156105ac573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906105e25750896001600160a01b0316816001600160a01b0316145b61062e5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20496e76616c6964207369676e617475726500006044820152606401610428565b6001600160a01b038a166000908152600560205260409020805460010190556106588a8a8a61068f565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106f15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610428565b6001600160a01b0382166107525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610428565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107bf8484610664565b90506000198114610827578181101561081a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610428565b610827848484840361068f565b50505050565b6001600160a01b0383166108915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610428565b6001600160a01b0382166108f35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610428565b6001600160a01b0383166000908152602081905260409020548181101561096b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610428565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610827565b600060208083528351808285015260005b818110156109fe578581018301518582016040015282016109e2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a3657600080fd5b919050565b60008060408385031215610a4e57600080fd5b610a5783610a1f565b946020939093013593505050565b600080600060608486031215610a7a57600080fd5b610a8384610a1f565b9250610a9160208501610a1f565b9150604084013590509250925092565b600060208284031215610ab357600080fd5b610abc82610a1f565b9392505050565b600080600080600080600060e0888a031215610ade57600080fd5b610ae788610a1f565b9650610af560208901610a1f565b95506040880135945060608801359350608088013560ff81168114610b1957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610b4957600080fd5b610b5283610a1f565b9150610b6060208401610a1f565b90509250929050565b600181811c90821680610b7d57607f821691505b602082108103610b9d57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561034557634e487b7160e01b600052601160045260246000fdfea2646970667358221220fc6d4ce8d584cd7cee0b7462959989a3d5d685aaa4767f213e6b5fa8bf6768f164736f6c63430008130033";

type AGLTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AGLTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AGLToken__factory extends ContractFactory {
  constructor(...args: AGLTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasurySig: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AGLToken> {
    return super.deploy(_treasurySig, overrides || {}) as Promise<AGLToken>;
  }
  override getDeployTransaction(
    _treasurySig: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasurySig, overrides || {});
  }
  override attach(address: string): AGLToken {
    return super.attach(address) as AGLToken;
  }
  override connect(signer: Signer): AGLToken__factory {
    return super.connect(signer) as AGLToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AGLTokenInterface {
    return new utils.Interface(_abi) as AGLTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AGLToken {
    return new Contract(address, _abi, signerOrProvider) as AGLToken;
  }
}
