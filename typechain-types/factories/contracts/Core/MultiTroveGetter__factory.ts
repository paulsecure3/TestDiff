/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultiTroveGetter,
  MultiTroveGetterInterface,
} from "../../../contracts/Core/MultiTroveGetter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TroveManager",
        name: "_troveManager",
        type: "address",
      },
      {
        internalType: "contract ISortedTroves",
        name: "_sortedTroves",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_startIdx",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "getMultipleSortedTroves",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "debt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "snapshotVSTDebt",
            type: "uint256",
          },
        ],
        internalType: "struct MultiTroveGetter.CombinedTroveData[]",
        name: "_troves",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sortedTroves",
    outputs: [
      {
        internalType: "contract ISortedTroves",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "troveManager",
    outputs: [
      {
        internalType: "contract TroveManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d35380380610d3583398101604081905261002f91610078565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b610c74806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806305e533ce146100465780633d83908a1461006f578063ae9187541461009a575b600080fd5b6100596100543660046109c5565b6100ad565b60405161006691906109fa565b60405180910390f35b600054610082906001600160a01b031681565b6040516001600160a01b039091168152602001610066565b600154610082906001600160a01b031681565b6060600080600085126100c5575083905060016100e0565b6100d0856001610a9e565b6100d990610ac6565b9150600090505b60015460405163504f167160e01b81526001600160a01b038881166004830152600092169063504f167190602401602060405180830381865afa15801561012b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014f9190610ae2565b9050808310610191576040805160008082526020820190925290610189565b61017661095e565b81526020019060019003908161016e5790505b5093506101d3565b600061019d8483610b11565b9050808611156101ab578095505b82156101c3576101bc8885886101dd565b94506101d1565b6101ce8885886105a3565b94505b505b5050509392505050565b600154604051631bdb4c8d60e01b81526001600160a01b038581166004830152606092600092911690631bdb4c8d90602401602060405180830381865afa15801561022c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102509190610b2a565b905060005b848110156102e2576001546040516339ed25cd60e01b81526001600160a01b03909116906339ed25cd9061028f9089908690600401610b4e565b602060405180830381865afa1580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610b2a565b91506102db81610b68565b9050610255565b508267ffffffffffffffff8111156102fc576102fc610afb565b60405190808252806020026020018201604052801561033557816020015b61032261095e565b81526020019060019003908161031a5790505b50915060005b8381101561059a578183828151811061035657610356610b81565b60209081029190910101516001600160a01b0391821690526000546040516307f258d560e41b8152911690637f258d50906103979085908a90600401610b4e565b60c060405180830381865afa1580156103b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d89190610b97565b9050508685815181106103ed576103ed610b81565b602002602001015160200187868151811061040a5761040a610b81565b602002602001015160400188878151811061042757610427610b81565b602002602001015160600189888151811061044457610444610b81565b602090810291909101015160800193909352929091529190526001600160a01b03918216905260005460405163649fea2560e11b815291169063c93fd44a906104939089908690600401610b4e565b6040805180830381865afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610c1a565b8483815181106104e5576104e5610b81565b602002602001015160a00185848151811061050257610502610b81565b602090810291909101015160c00191909152526001546040516339ed25cd60e01b81526001600160a01b03909116906339ed25cd906105479089908690600401610b4e565b602060405180830381865afa158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610b2a565b915061059381610b68565b905061033b565b50509392505050565b600154604051637608271560e01b81526001600160a01b038581166004830152606092600092911690637608271590602401602060405180830381865afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190610b2a565b905060005b848110156106a7576001546040516239c6e160ea1b81526001600160a01b039091169063e71b8400906106549089908690600401610b4e565b602060405180830381865afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190610b2a565b91506106a081610b68565b905061061b565b508267ffffffffffffffff8111156106c1576106c1610afb565b6040519080825280602002602001820160405280156106fa57816020015b6106e761095e565b8152602001906001900390816106df5790505b50915060005b8381101561059a578183828151811061071b5761071b610b81565b60209081029190910101516001600160a01b0391821690526000546040516307f258d560e41b8152911690637f258d509061075c9085908a90600401610b4e565b60c060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190610b97565b9050508685815181106107b2576107b2610b81565b60200260200101516020018786815181106107cf576107cf610b81565b60200260200101516040018887815181106107ec576107ec610b81565b602002602001015160600189888151811061080957610809610b81565b602090810291909101015160800193909352929091529190526001600160a01b03918216905260005460405163649fea2560e11b815291169063c93fd44a906108589089908690600401610b4e565b6040805180830381865afa158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190610c1a565b8483815181106108aa576108aa610b81565b602002602001015160a0018584815181106108c7576108c7610b81565b602090810291909101015160c00191909152526001546040516239c6e160ea1b81526001600160a01b039091169063e71b84009061090b9089908690600401610b4e565b602060405180830381865afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190610b2a565b915061095781610b68565b9050610700565b6040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03811681146109c257600080fd5b50565b6000806000606084860312156109da57600080fd5b83356109e5816109ad565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b82811015610a7b57815180516001600160a01b0390811686528782015116878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e09093019290850190600101610a17565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018281126000831280158216821582161715610abe57610abe610a88565b505092915050565b6000600160ff1b8201610adb57610adb610a88565b5060000390565b600060208284031215610af457600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b81810381811115610b2457610b24610a88565b92915050565b600060208284031215610b3c57600080fd5b8151610b47816109ad565b9392505050565b6001600160a01b0392831681529116602082015260400190565b600060018201610b7a57610b7a610a88565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008060008060008060c08789031215610bb057600080fd5b8651610bbb816109ad565b80965050602087015194506040870151935060608701519250608087015160058110610be657600080fd5b60a08801519092506fffffffffffffffffffffffffffffffff81168114610c0c57600080fd5b809150509295509295509295565b60008060408385031215610c2d57600080fd5b50508051602090910151909290915056fea264697066735822122085587c7089ab7f23467b0e3ac79691372dafe79d89cee3452de6520f3c4e8f3664736f6c63430008130033";

type MultiTroveGetterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiTroveGetterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiTroveGetter__factory extends ContractFactory {
  constructor(...args: MultiTroveGetterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _troveManager: PromiseOrValue<string>,
    _sortedTroves: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiTroveGetter> {
    return super.deploy(
      _troveManager,
      _sortedTroves,
      overrides || {}
    ) as Promise<MultiTroveGetter>;
  }
  override getDeployTransaction(
    _troveManager: PromiseOrValue<string>,
    _sortedTroves: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _troveManager,
      _sortedTroves,
      overrides || {}
    );
  }
  override attach(address: string): MultiTroveGetter {
    return super.attach(address) as MultiTroveGetter;
  }
  override connect(signer: Signer): MultiTroveGetter__factory {
    return super.connect(signer) as MultiTroveGetter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiTroveGetterInterface {
    return new utils.Interface(_abi) as MultiTroveGetterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiTroveGetter {
    return new Contract(address, _abi, signerOrProvider) as MultiTroveGetter;
  }
}
