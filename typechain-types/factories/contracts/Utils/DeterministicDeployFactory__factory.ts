/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DeterministicDeployFactory,
  DeterministicDeployFactoryInterface,
} from "../../../contracts/Utils/DeterministicDeployFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Deploy",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101a0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639c4ae2d014610030575b600080fd5b61004361003e3660046100b5565b610045565b005b6000818351602085016000f59050803b61005e57600080fd5b6040516001600160a01b03821681527f55ea6c6b31543d8e2ec6a72f71a79c0f4b72ed0d4757172b043d8f4f4cd848489060200160405180910390a1505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156100c857600080fd5b823567ffffffffffffffff808211156100e057600080fd5b818501915085601f8301126100f457600080fd5b8135818111156101065761010661009f565b604051601f8201601f19908116603f0116810190838211818310171561012e5761012e61009f565b8160405282815288602084870101111561014757600080fd5b82602086016020830137600060209382018401529896909101359650505050505056fea26469706673582212203d5332c3949c0a39012faa619fd8dcacacfb30650b62abe81d9860866a3c32b964736f6c63430008130033";

type DeterministicDeployFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeterministicDeployFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeterministicDeployFactory__factory extends ContractFactory {
  constructor(...args: DeterministicDeployFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeterministicDeployFactory> {
    return super.deploy(overrides || {}) as Promise<DeterministicDeployFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeterministicDeployFactory {
    return super.attach(address) as DeterministicDeployFactory;
  }
  override connect(signer: Signer): DeterministicDeployFactory__factory {
    return super.connect(signer) as DeterministicDeployFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeterministicDeployFactoryInterface {
    return new utils.Interface(_abi) as DeterministicDeployFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeterministicDeployFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DeterministicDeployFactory;
  }
}
