/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AgilelyGLPStaking,
  AgilelyGLPStakingInterface,
} from "../../../contracts/GmxStake/AgilelyGLPStaking";

const _abi = [
  {
    inputs: [],
    name: "BPSHigherThanOneHundred",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "CallerIsNotAnOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientStakeBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmountPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FailedToSendETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaking",
        type: "uint256",
      },
    ],
    name: "StakingUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "agilelyTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "applyNewFeeFlow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTreasuryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "enableStaticTreasuryFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fGLP",
    outputs: [
      {
        internalType: "contract IGMXRewardTracker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failedToSend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeGlpTrackerRewards",
    outputs: [
      {
        internalType: "contract IGMXRewardTracker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "forceExiting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getRecoverableETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultOwner",
        type: "address",
      },
    ],
    name: "getVaultOwnerClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultOwner",
        type: "address",
      },
    ],
    name: "getVaultOwnerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultOwner",
        type: "address",
      },
    ],
    name: "getVaultStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxRewardRouterV2",
    outputs: [
      {
        internalType: "contract IGMXRewardRouterV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newFeeFlow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract IPriceFeedV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retrySendTreasuryFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sGLP",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sharesBPS",
        type: "uint256",
      },
    ],
    name: "setBaseTreasuryFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeTracker",
        type: "address",
      },
    ],
    name: "setFeeGlpTrackerReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agilelyTreasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sGLP",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gmxRewardRouterV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeGlpTrackerRewards",
        type: "address",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_behalfOf",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "feeBPS_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_behalfOf",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useStaticFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611fdc806100206000396000f3fe6080604052600436106102345760003560e01c806387a29f381161012e578063bacd9c07116100ab578063c50e03471161006f578063c50e0347146106fb578063cc32d17614610731578063f0741fbc14610746578063f0f4426014610766578063f2fde38b1461078657600080fd5b8063bacd9c0714610658578063bbda53b51461067d578063bc8da49a1461069d578063c2a672e0146106c5578063c386e77a146106e557600080fd5b8063a12b3661116100f2578063a12b366114610578578063a3f4df7e146105ae578063a8d77412146105f8578063adc9772e14610618578063b8b50f1c1461063857600080fd5b806387a29f38146104ec5780638a30e15c1461050d5780638da5cb5b1461052e5780638f1c56bd1461054c57806390023f271461056257600080fd5b80634e71d92d116101bc578063741bef1a11610180578063741bef1a1461043e5780637588898d14610476578063774cb5461461049657806380ffde32146104b6578063817b1cd2146104d657600080fd5b80634e71d92d1461039b578063558a7297146103b05780636d70f7ae146103d0578063715018a614610409578063724e78da1461041e57600080fd5b80631b775390116102035780631b775390146103115780631c7810a5146103315780631fb288c614610346578063392e53cd1461035b5780633c3227981461038557600080fd5b80630614117a1461027c57806309b478a91461029357806311ce4f0a146102b357806312065fe0146102fc57600080fd5b3661027757610242346107a6565b6040513481527f562ff1d6fee77720385c79d29bef3c90c5a796b161826766d09a972bda104a3c9060200160405180910390a1005b600080fd5b34801561028857600080fd5b506102916108b9565b005b34801561029f57600080fd5b506102916102ae366004611d0d565b61098b565b3480156102bf57600080fd5b506102e96102ce366004611d0d565b6001600160a01b03166000908152606e602052604090205490565b6040519081526020015b60405180910390f35b34801561030857600080fd5b506102e96109cf565b34801561031d57600080fd5b5061029161032c366004611d28565b6109e4565b34801561033d57600080fd5b50610291610a4d565b34801561035257600080fd5b50610291610af8565b34801561036757600080fd5b506072546103759060ff1681565b60405190151581526020016102f3565b34801561039157600080fd5b506102e9606a5481565b3480156103a757600080fd5b50610291610b76565b3480156103bc57600080fd5b506102916103cb366004611d4f565b610bee565b3480156103dc57600080fd5b506103756103eb366004611d0d565b6001600160a01b03166000908152606d602052604090205460ff1690565b34801561041557600080fd5b50610291610c4e565b34801561042a57600080fd5b50610291610439366004611d0d565b610c62565b34801561044a57600080fd5b5060705461045e906001600160a01b031681565b6040516001600160a01b0390911681526020016102f3565b34801561048257600080fd5b50610291610491366004611d0d565b610c8c565b3480156104a257600080fd5b5060685461045e906001600160a01b031681565b3480156104c257600080fd5b506102916104d1366004611d86565b610cb6565b3480156104e257600080fd5b506102e9606c5481565b3480156104f857600080fd5b5060705461037590600160a01b900460ff1681565b34801561051957600080fd5b5060705461037590600160a81b900460ff1681565b34801561053a57600080fd5b506033546001600160a01b031661045e565b34801561055857600080fd5b506102e9606b5481565b34801561056e57600080fd5b506102e960695481565b34801561058457600080fd5b506102e9610593366004611d0d565b6001600160a01b03166000908152606f602052604090205490565b3480156105ba57600080fd5b506105eb604051806040016040528060118152602001704167696c656c79474c505374616b696e6760781b81525081565b6040516102f39190611dfe565b34801561060457600080fd5b5060665461045e906001600160a01b031681565b34801561062457600080fd5b50610291610633366004611e31565b610edd565b34801561064457600080fd5b506102e9610653366004611d0d565b61108f565b34801561066457600080fd5b5060655461045e9061010090046001600160a01b031681565b34801561068957600080fd5b5060675461045e906001600160a01b031681565b3480156106a957600080fd5b5061045e735294a1b34bd717eac8b4ef2918b07e006d66dcd781565b3480156106d157600080fd5b506102916106e0366004611e31565b6111e1565b3480156106f157600080fd5b506102e960715481565b34801561070757600080fd5b506102e9610716366004611d0d565b6001600160a01b031660009081526073602052604090205490565b34801561073d57600080fd5b506102e961125d565b34801561075257600080fd5b50610291610761366004611e5b565b6114d3565b34801561077257600080fd5b50610291610781366004611d0d565b611515565b34801561079257600080fd5b506102916107a1366004611d0d565b611545565b6000676765c793fa10079d601b1b6127106107bf61125d565b6107d4676765c793fa10079d601b1b86611e8e565b6107de9190611e8e565b6107e89190611ec1565b6107f29190611ec1565b6065546040519192506000916101009091046001600160a01b03169083908381818185875af1925050503d8060008114610848576040519150601f19603f3d011682016040523d82523d6000602084013e61084d565b606091505b50509050806108b45781607160008282546108689190611ee3565b90915550506065546040518381526101009091046001600160a01b0316907f726074e9ad0d152aa5d686b1d9c662d0ca63151a15c661c785231937fca243cd9060200160405180910390a25b505050565b3360009081526073602052604081208054919055806109155760405162461bcd60e51b81526020600482015260136024820152722737ba3434b733903a37903932b1b7bb32b91760691b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d8060008114610957576040519150601f19603f3d011682016040523d82523d6000602084013e61095c565b606091505b505090508061098757604051635e0a829b60e01b81523360048201526024810183905260440161090c565b5050565b6109936115bb565b6001600160a01b0381166000908152606e60205260409020546109cc90829073be3de7fb9aa09b3fa931868fb49d5ba5fee2ebb1611615565b50565b6000607154476109df9190611ef6565b905090565b6109ec6115bb565b612710811115610a0f5760405163fabff87560e01b815260040160405180910390fd5b607054600160a01b900460ff16158015610a2a57506107d081115b15610a485760405163cd4e616760e01b815260040160405180910390fd5b606955565b610a556115bb565b607180546000918290556065546040519192916101009091046001600160a01b031690839060006040518083038185875af1925050503d8060008114610ab7576040519150601f19603f3d011682016040523d82523d6000602084013e610abc565b606091505b505090508061098757606554604051635e0a829b60e01b81526101009091046001600160a01b031660048201526024810183905260440161090c565b610b006115bb565b607054600160a81b900460ff1615610b545760405162461bcd60e51b8152602060048201526017602482015276119d5b98dd1a5bdb88185b1c9958591e4818d85b1b1959604a1b604482015260640161090c565b6070805460ff60a81b1916600160a81b179055610b70476107a6565b47606b55565b60655460ff1615610b9a5760405163c5f2be5160e01b815260040160405180910390fd5b6065805460ff19166001179055336000908152606e60205260408120549003610bd65760405163263892ab60e01b815260040160405180910390fd5b610be233600033611615565b6065805460ff19169055565b81806001600160a01b03163b600003610c1a5760405163e6c4247b60e01b815260040160405180910390fd5b610c226115bb565b506001600160a01b03919091166000908152606d60205260409020805460ff1916911515919091179055565b610c566115bb565b610c606000611753565b565b610c6a6115bb565b607080546001600160a01b0319166001600160a01b0392909216919091179055565b610c946115bb565b606880546001600160a01b0319166001600160a01b0392909216919091179055565b836001600160a01b038116610cde5760405163e6c4247b60e01b815260040160405180910390fd5b836001600160a01b038116610d065760405163e6c4247b60e01b815260040160405180910390fd5b836001600160a01b038116610d2e5760405163e6c4247b60e01b815260040160405180910390fd5b836001600160a01b038116610d565760405163e6c4247b60e01b815260040160405180910390fd5b600054610100900460ff1615808015610d765750600054600160ff909116105b80610d905750303b158015610d90575060005460ff166001145b610df35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161090c565b6000805460ff191660011790558015610e16576000805461ff0019166101001790555b610e1e6117a5565b60658054610100600160a81b0319166101006001600160a01b038c81169190910291909117909155606680546001600160a01b03199081168b8416179091556067805482168a8416179055606880549091169188169190911790556107d06069556072805460ff191660011790558015610ed2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b336000908152606d602052604090205460ff16610f0f5760405163be46a97b60e01b815233600482015260240161090c565b816001600160a01b038116610f375760405163e6c4247b60e01b815260040160405180910390fd5b8180600003610f595760405163d6e1b6d560e01b815260040160405180910390fd5b60655460ff1615610f7d5760405163c5f2be5160e01b815260040160405180910390fd5b6065805460ff19166001179055610f93846117d4565b606654610fab906001600160a01b03163330866119c8565b6001600160a01b0384166000908152606e6020526040812080548591908390610fd5908490611ee3565b925050819055905083606c6000828254610fef9190611ee3565b9250508190555061100e81606a54676765c793fa10079d601b1b611ad2565b6001600160a01b0386166000908152606f6020908152604080832093909355338252606d9052819020805460ff19166001179055606c5490517f2fea4ed17835c76ac7d0a753bb19c553bc53693c2c161c9691cda09d71fab5db916110769190815260200190565b60405180910390a150506065805460ff19169055505050565b60685460405163402914f560e01b815230600482015260009182916001600160a01b039091169063402914f590602401602060405180830381865afa1580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111009190611f09565b90506111168161110e61125d565b612710611b13565b6111209082611ef6565b905060008161112d6109cf565b6111379190611ee3565b606a54606c5491925090156111785761116b606b54836111579190611ef6565b676765c793fa10079d601b1b606c54611b13565b6111759082611ee3565b90505b6001600160a01b0385166000908152606f6020908152604080832054606e9092528220549091906111b59084676765c793fa10079d601b1b611b13565b9050818111156111d4576111c98282611ef6565b979650505050505050565b5060009695505050505050565b336000908152606d602052604090205460ff166112135760405163be46a97b60e01b815233600482015260240161090c565b60655460ff16156112375760405163c5f2be5160e01b815260040160405180910390fd5b6065805460ff1916600117905561124f828233611615565b50506065805460ff19169055565b607054600090600160a01b900460ff1615611279575060695490565b6000735294a1b34bd717eac8b4ef2918b07e006d66dcd76001600160a01b031663a8d936276040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f19190611f09565b90506000606860009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136c9190611f09565b60705460405162736d0b60e31b81526000600482018190529293506001600160a01b039091169063039b685890602401602060405180830381865afa1580156113b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dd9190611f09565b60705460665460405162736d0b60e31b81526001600160a01b03918216600482015292935060009291169063039b685890602401602060405180830381865afa15801561142e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114529190611f09565b905061145e8184611e8e565b61271083611470876301e13380611e8e565b61147a9190611e8e565b6114849190611e8e565b61148e9190611ec1565b94506109c48511156114c657846127106069546114ab9190611e8e565b6114b59190611ec1565b6114c190612710611ef6565b6114ca565b6069545b94505050505090565b6114db6115bb565b6070805482158015600160a01b810260ff60a01b199093169290921790925561150757506107d0606954115b156109cc576107d060695550565b61151d6115bb565b606580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b61154d6115bb565b6001600160a01b0381166115b25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161090c565b6109cc81611753565b6033546001600160a01b03163314610c605760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161090c565b81606c54108061163c57506001600160a01b0383166000908152606e602052604090205482115b1561165a5760405163263892ab60e01b815260040160405180910390fd5b611663836117d4565b6001600160a01b0383166000908152606e602052604081208054849190839061168d908490611ef6565b918290555091505082156116e257600083606c54106116ac57836116b0565b606c545b905080606c60008282546116c49190611ef6565b90915550506066546116e0906001600160a01b03168486611bc1565b505b6116fa81606a54676765c793fa10079d601b1b611ad2565b6001600160a01b0385166000908152606f602090815260409182902092909255606c5490519081527f2fea4ed17835c76ac7d0a753bb19c553bc53693c2c161c9691cda09d71fab5db910160405180910390a150505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117cc5760405162461bcd60e51b815260040161090c90611f22565b610c60611cc1565b60675460405163185b800160e11b81526001600482018190526024820181905260448201819052606482018190526084820181905260a4820181905260c48201526001600160a01b03909116906330b700029060e401600060405180830381600087803b15801561184457600080fd5b505af1158015611858573d6000803e3d6000fd5b505050506000606c5411156118965761187f606b546118756109cf565b6111579190611ef6565b606a60008282546118909190611ee3565b90915550505b6001600160a01b0381166000908152606f6020908152604080832054606e909252822054606a549192916118d69190676765c793fa10079d601b1b611b13565b9050818111156119b85760006118ec8383611ef6565b90506000846001600160a01b03168260405160006040518083038185875af1925050503d806000811461193b576040519150601f19603f3d011682016040523d82523d6000602084013e611940565b606091505b50509050806119b5576001600160a01b03851660009081526073602052604081208054849290611971908490611ee3565b90915550506040518281526001600160a01b038616907f726074e9ad0d152aa5d686b1d9c662d0ca63151a15c661c785231937fca243cd9060200160405180910390a25b50505b6119c06109cf565b606b55505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611a2c9190611f6d565b6000604051808303816000865af19150503d8060008114611a69576040519150601f19603f3d011682016040523d82523d6000602084013e611a6e565b606091505b5091509150818015611a98575080511580611a98575080806020019051810190611a989190611f89565b611aca5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161090c565b505050505050565b6000611adf848484611b13565b905060008280611af157611af1611eab565b8486091115611b0c576000198110611b0857600080fd5b6001015b9392505050565b6000808060001985870985870292508281108382030391505080600003611b4c5760008411611b4157600080fd5b508290049050611b0c565b808411611b5857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611c1d9190611f6d565b6000604051808303816000865af19150503d8060008114611c5a576040519150601f19603f3d011682016040523d82523d6000602084013e611c5f565b606091505b5091509150818015611c89575080511580611c89575080806020019051810190611c899190611f89565b611cba5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161090c565b5050505050565b600054610100900460ff16611ce85760405162461bcd60e51b815260040161090c90611f22565b610c6033611753565b80356001600160a01b0381168114611d0857600080fd5b919050565b600060208284031215611d1f57600080fd5b611b0c82611cf1565b600060208284031215611d3a57600080fd5b5035919050565b80151581146109cc57600080fd5b60008060408385031215611d6257600080fd5b611d6b83611cf1565b91506020830135611d7b81611d41565b809150509250929050565b60008060008060808587031215611d9c57600080fd5b611da585611cf1565b9350611db360208601611cf1565b9250611dc160408601611cf1565b9150611dcf60608601611cf1565b905092959194509250565b60005b83811015611df5578181015183820152602001611ddd565b50506000910152565b6020815260008251806020840152611e1d816040850160208701611dda565b601f01601f19169190910160400192915050565b60008060408385031215611e4457600080fd5b611e4d83611cf1565b946020939093013593505050565b600060208284031215611e6d57600080fd5b8135611b0c81611d41565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417611ea557611ea5611e78565b92915050565b634e487b7160e01b600052601260045260246000fd5b600082611ede57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115611ea557611ea5611e78565b81810381811115611ea557611ea5611e78565b600060208284031215611f1b57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611f7f818460208701611dda565b9190910192915050565b600060208284031215611f9b57600080fd5b8151611b0c81611d4156fea264697066735822122092b41f9d7163122ccd677a9ad3824ee620988e69346b32751a8d99fea3cab18264736f6c63430008130033";

type AgilelyGLPStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgilelyGLPStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgilelyGLPStaking__factory extends ContractFactory {
  constructor(...args: AgilelyGLPStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AgilelyGLPStaking> {
    return super.deploy(overrides || {}) as Promise<AgilelyGLPStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AgilelyGLPStaking {
    return super.attach(address) as AgilelyGLPStaking;
  }
  override connect(signer: Signer): AgilelyGLPStaking__factory {
    return super.connect(signer) as AgilelyGLPStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgilelyGLPStakingInterface {
    return new utils.Interface(_abi) as AgilelyGLPStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgilelyGLPStaking {
    return new Contract(address, _abi, signerOrProvider) as AgilelyGLPStaking;
  }
}
