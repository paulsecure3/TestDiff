/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICommunityIssuance,
  ICommunityIssuanceInterface,
} from "../../../contracts/Interfaces/ICommunityIssuance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_AGLTokenAddress",
        type: "address",
      },
    ],
    name: "AGLTokenAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_stabilityPoolAddress",
        type: "address",
      },
    ],
    name: "StabilityPoolAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stabilityPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_totalAGLIssued",
        type: "uint256",
      },
    ],
    name: "TotalAGLIssuedUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_assignedSupply",
        type: "uint256",
      },
    ],
    name: "addFundToStabilityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_assignedSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "addFundToStabilityPoolFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "issueAGL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_aglAmount",
        type: "uint256",
      },
    ],
    name: "sendAGL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_AGLTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stabilityPoolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adminContract",
        type: "address",
      },
    ],
    name: "setAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stabilityPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_weeklyReward",
        type: "uint256",
      },
    ],
    name: "setWeeklyAglDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICommunityIssuance__factory {
  static readonly abi = _abi;
  static createInterface(): ICommunityIssuanceInterface {
    return new utils.Interface(_abi) as ICommunityIssuanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICommunityIssuance {
    return new Contract(address, _abi, signerOrProvider) as ICommunityIssuance;
  }
}
