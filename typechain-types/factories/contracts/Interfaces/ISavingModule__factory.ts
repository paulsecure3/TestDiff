/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISavingModule,
  ISavingModuleInterface,
} from "../../../contracts/Interfaces/ISavingModule";

const _abi = [
  {
    inputs: [],
    name: "AmountIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLock",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLockTime",
    type: "error",
  },
  {
    inputs: [],
    name: "LockNotFoundOrExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPermission",
    type: "error",
  },
  {
    inputs: [],
    name: "NotLockOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolIsFull",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdaAmountReturned",
        type: "uint256",
      },
    ],
    name: "ExitLock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "autolock",
        type: "bool",
      },
    ],
    name: "LockAutoLockChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTime",
        type: "uint256",
      },
    ],
    name: "LockAutoLockTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initialAmount",
        type: "uint256",
      },
    ],
    name: "LockCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "addedReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAllocatedUSDA",
        type: "uint256",
      },
    ],
    name: "PoolUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "receivedUSDA",
        type: "uint256",
      },
    ],
    name: "USDAReceveidFromVRR",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_removeExpired",
        type: "bool",
      },
    ],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAllStabilityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "_removeExpired",
        type: "bool",
      },
    ],
    name: "claimBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_autoLock",
        type: "bool",
      },
    ],
    name: "createLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositUSDA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "getCurrentLockReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
    ],
    name: "getLockById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "bool",
            name: "autoLock",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "lockDays",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "claimed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "end",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "initialAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "cappedShare",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "lastTimeClaimed",
            type: "uint256",
          },
        ],
        internalType: "struct Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLocks",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "bool",
            name: "autoLock",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "lockDays",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "claimed",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "end",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "initialAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "cappedShare",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "lastTimeClaimed",
            type: "uint256",
          },
        ],
        internalType: "struct Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserLockIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "_lockDays",
        type: "uint128",
      },
    ],
    name: "increaseLockDaysTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "switchAutolock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISavingModule__factory {
  static readonly abi = _abi;
  static createInterface(): ISavingModuleInterface {
    return new utils.Interface(_abi) as ISavingModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISavingModule {
    return new Contract(address, _abi, signerOrProvider) as ISavingModule;
  }
}
