/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ETHTransferScript,
  ETHTransferScriptInterface,
} from "../../../contracts/Proxy/ETHTransferScript";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610118806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80637b1a490914602d575b600080fd5b603c603836600460ac565b6050565b604051901515815260200160405180910390f35b600080836001600160a01b03168360405160006040518083038185875af1925050503d8060008114609c576040519150601f19603f3d011682016040523d82523d6000602084013e60a1565b606091505b509095945050505050565b6000806040838503121560be57600080fd5b82356001600160a01b038116811460d457600080fd5b94602093909301359350505056fea264697066735822122070094e3c8e7aa82c8713f50773c20fbfb4f091fc40064b7b6490431158a15b4e64736f6c63430008130033";

type ETHTransferScriptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHTransferScriptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHTransferScript__factory extends ContractFactory {
  constructor(...args: ETHTransferScriptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ETHTransferScript> {
    return super.deploy(overrides || {}) as Promise<ETHTransferScript>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ETHTransferScript {
    return super.attach(address) as ETHTransferScript;
  }
  override connect(signer: Signer): ETHTransferScript__factory {
    return super.connect(signer) as ETHTransferScript__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHTransferScriptInterface {
    return new utils.Interface(_abi) as ETHTransferScriptInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHTransferScript {
    return new Contract(address, _abi, signerOrProvider) as ETHTransferScript;
  }
}
