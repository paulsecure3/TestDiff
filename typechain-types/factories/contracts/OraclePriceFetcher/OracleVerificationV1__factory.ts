/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OracleVerificationV1,
  OracleVerificationV1Interface,
} from "../../../contracts/OraclePriceFetcher/OracleVerificationV1";

const _abi = [
  {
    inputs: [],
    name: "MAX_PRICE_DEVIATION_FROM_PREVIOUS_ROUND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PRICE_DIFFERENCE_BETWEEN_ORACLES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastGoodPrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "currentPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdate",
                type: "uint256",
              },
            ],
            internalType: "struct IOracleWrapper.SavedResponse",
            name: "primaryResponse",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "currentPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastUpdate",
                type: "uint256",
              },
            ],
            internalType: "struct IOracleWrapper.SavedResponse",
            name: "secondaryResponse",
            type: "tuple",
          },
        ],
        internalType: "struct IOracleVerificationV1.RequestVerification",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610423806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063271fbaf71461005157806345079cb41461007657806358a6aa8814610084578063f56f48f214610093575b600080fd5b61006461005f366004610342565b61009c565b60405190815260200160405180910390f35b61006466b1a2bc2ec5000081565b6100646706f05b59d3b2000081565b61006461384081565b6000806100ac836020015161016d565b905060006100bd846040015161016d565b905060006100db8560200151600001518660400151600001516101a1565b90508261012c5760208086015180519101516100f79190610215565b1561011c57811561010c575050915192915050565b8061011c57604085015151610123565b6020850151515b95945050505050565b8161016357604085015180516020909101516101489190610215565b15610157575050915192915050565b50505050604001515190565b5050915192915050565b6000806101808360400151613840610262565b9050808061018d57508251155b8061019a57506020830151155b9392505050565b60008115806101ae575082155b156101bb5750600061020f565b60006101c78484610287565b905060006101d5858561029d565b905060006101ff836101f9670de0b6b3a76400006101f386846102ad565b906102b9565b906102c5565b66b1a2bc2ec50000101593505050505b92915050565b6000806102228484610287565b90506000610230858561029d565b9050600061024e826101f9670de0b6b3a76400006101f383886102ad565b6706f05b59d3b20000109695505050505050565b6000824210156102745750600161020f565b8161027f84426103a1565b119392505050565b6000818310610296578161019a565b5090919050565b600081831015610296578161019a565b600061019a82846103a1565b600061019a82846103b4565b600061019a82846103cb565b6040516060810167ffffffffffffffff8111828210171561030257634e487b7160e01b600052604160045260246000fd5b60405290565b60006060828403121561031a57600080fd5b6103226102d1565b905081358152602082013560208201526040820135604082015292915050565b600060e0828403121561035457600080fd5b61035c6102d1565b8235815261036d8460208501610308565b602082015261037f8460808501610308565b60408201529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561020f5761020f61038b565b808202811582820484141761020f5761020f61038b565b6000826103e857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e04dc60824524a281074b1d980657de8da8e5d61a51be7b340e5d6e7279af7bc64736f6c63430008130033";

type OracleVerificationV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleVerificationV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleVerificationV1__factory extends ContractFactory {
  constructor(...args: OracleVerificationV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OracleVerificationV1> {
    return super.deploy(overrides || {}) as Promise<OracleVerificationV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OracleVerificationV1 {
    return super.attach(address) as OracleVerificationV1;
  }
  override connect(signer: Signer): OracleVerificationV1__factory {
    return super.connect(signer) as OracleVerificationV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleVerificationV1Interface {
    return new utils.Interface(_abi) as OracleVerificationV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleVerificationV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OracleVerificationV1;
  }
}
