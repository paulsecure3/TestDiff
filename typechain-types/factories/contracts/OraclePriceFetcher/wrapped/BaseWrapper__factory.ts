/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  BaseWrapper,
  BaseWrapperInterface,
} from "../../../../contracts/OraclePriceFetcher/wrapped/BaseWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "ResponseFromOracleIsInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "TokenIsNotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "TARGET_DIGITS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "fetchPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getExternalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getLastPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "retriveSavedResponses",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IOracleWrapper.SavedResponse",
        name: "currentResponse",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class BaseWrapper__factory {
  static readonly abi = _abi;
  static createInterface(): BaseWrapperInterface {
    return new utils.Interface(_abi) as BaseWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseWrapper {
    return new Contract(address, _abi, signerOrProvider) as BaseWrapper;
  }
}
