/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GLPOracle,
  GLPOracleInterface,
} from "../../../../contracts/OraclePriceFetcher/oracle/GLPOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glp",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpManager",
    outputs: [
      {
        internalType: "contract IGLPManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxVault",
    outputs: [
      {
        internalType: "contract IGMXVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_of",
        type: "address",
      },
    ],
    name: "initOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_glpManager",
        type: "address",
      },
    ],
    name: "setGLPManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_glp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_glpManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gmxVault",
        type: "address",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061072d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806378a207ee1161006657806378a207ee146100f25780638da5cb5b1461011d57806398d5fdca14610130578063b3b3453e14610146578063fa6db1bc1461015957600080fd5b8063313ce5671461009857806361302f17146100b75780636812b16c146100cc5780636d93b1b9146100df575b600080fd5b6100a0601281565b60405160ff90911681526020015b60405180910390f35b6100ca6100c53660046105fe565b610172565b005b6100ca6100da366004610620565b6101e9565b6100ca6100ed3660046105fe565b610342565b600254610105906001600160a01b031681565b6040516001600160a01b0390911681526020016100ae565b600354610105906001600160a01b031681565b6101386103b3565b6040519081526020016100ae565b600154610105906001600160a01b031681565b600054610105906201000090046001600160a01b031681565b6003546001600160a01b0316156101c75760405162461bcd60e51b815260206004820152601460248201527320b63932b0b23c903430b99030b71037bbb732b960611b60448201526064015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16158080156102095750600054600160ff909116105b806102235750303b158015610223575060005460ff166001145b6102865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101be565b6000805460ff1916600117905580156102a9576000805461ff0019166101001790555b600280546001600160a01b038087166001600160a01b03199283161790925560008054868416620100000262010000600160b01b03199091161790556001805492851692909116919091179055801561033c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6003546001600160a01b031633146103895760405162461bcd60e51b815260206004820152600a6024820152694f776e6572206f6e6c7960b01b60448201526064016101be565b600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316637a210a2b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d9190610663565b600160009054906101000a90046001600160a01b03166001600160a01b0316634d47b3046040518163ffffffff1660e01b8152600401602060405180830381865afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190610663565b6104ae9190610692565b90506000600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610663565b60008054604051630345051f60e51b815260048101929092526201000090046001600160a01b0316906368a0a3e090602401602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190610663565b6105ae90670de0b6b3a76400006106ab565b6105b891906106c2565b90506127106105c783836106ab565b6105d191906106c2565b6105db90826106e4565b9250505090565b80356001600160a01b03811681146105f957600080fd5b919050565b60006020828403121561061057600080fd5b610619826105e2565b9392505050565b60008060006060848603121561063557600080fd5b61063e846105e2565b925061064c602085016105e2565b915061065a604085016105e2565b90509250925092565b60006020828403121561067557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106a5576106a561067c565b92915050565b80820281158282048414176106a5576106a561067c565b6000826106df57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106a5576106a561067c56fea264697066735822122020a88565c02e2b1ed7512dd130c29998ad4bfacd769ab229e07dc2ffab5ba4e764736f6c63430008130033";

type GLPOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GLPOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GLPOracle__factory extends ContractFactory {
  constructor(...args: GLPOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GLPOracle> {
    return super.deploy(overrides || {}) as Promise<GLPOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GLPOracle {
    return super.attach(address) as GLPOracle;
  }
  override connect(signer: Signer): GLPOracle__factory {
    return super.connect(signer) as GLPOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GLPOracleInterface {
    return new utils.Interface(_abi) as GLPOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GLPOracle {
    return new Contract(address, _abi, signerOrProvider) as GLPOracle;
  }
}
